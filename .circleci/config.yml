version: 2
jobs:
  test:
    working_directory: ~/circle
    docker:
      - image: circleci/ruby:2.6.4
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: test
          command: 'make spec'
  build_and_deploy_to_test:
    working_directory: ~/circle/git/fb-user-filestore
    docker: &ecr_base_image
      - image: $AWS_ECR_ACCOUNT_URL
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "71:2d:7e:c6:9c:9f:62:4e:0b:e3:d8:8d:5e:ee:ae:c2"
      - run:
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_712d7ec69c9f624e0be3d88d5eeeaec2" >> $BASH_ENV
      - run:
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
      - run:
          name: deploy to test dev
          environment:
            APPLICATION_NAME: fb-user-filestore
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-platform-test-dev
            POD_NAME: fb-user-filestore-api-test-dev
          command: './deploy-scripts/bin/deploy'
      - run:
          name: deploy to test production
          environment:
            APPLICATION_NAME: fb-user-filestore
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-platform-test-production
            POD_NAME: fb-user-filestore-api-test-production
          command: './deploy-scripts/bin/deploy'
  build_and_deploy_to_live:
    working_directory: ~/circle/git/fb-user-filestore
    docker: *ecr_base_image
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "71:2d:7e:c6:9c:9f:62:4e:0b:e3:d8:8d:5e:ee:ae:c2"
      - run:
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_712d7ec69c9f624e0be3d88d5eeeaec2" >> $BASH_ENV
      - run:
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: live
          command: './deploy-scripts/bin/build'
      - run:
          name: deploy to live dev
          environment:
            APPLICATION_NAME: fb-user-filestore
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-platform-live-dev
            POD_NAME: fb-user-filestore-api-live-dev
          command: './deploy-scripts/bin/deploy'
      - run:
          name: deploy to live production
          environment:
            APPLICATION_NAME: fb-user-filestore
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-platform-live-production
            POD_NAME: fb-user-filestore-api-live-production
          command: './deploy-scripts/bin/deploy'
  trigger_acceptance_tests:
    docker:
      - image: circleci/ruby:latest
    steps:
      - run:
          name: "Trigger Acceptance Tests"
          command: "curl -u ${CIRCLE_TOKEN}: -X POST https://circleci.com/api/v2/project/github/ministryofjustice/fb-acceptance-tests/pipeline -H 'Content-Type: application/json' -H 'Accept: application/json'"

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - trigger_acceptance_tests:
          requires:
            - test
          filters:
            branches:
              only: master
      - build_and_deploy_to_test:
          requires:
            - test
          filters:
            branches:
              only: master
      - confirm_production_deploy:
          type: approval
          requires:
            - build_and_deploy_to_test
      - build_and_deploy_to_live:
          requires:
            - confirm_production_deploy
